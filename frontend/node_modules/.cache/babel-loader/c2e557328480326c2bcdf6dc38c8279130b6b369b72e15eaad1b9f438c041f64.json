{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aylan\\\\OneDrive\\\\Desktop\\\\events\\\\EventsMulti\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"wLs2/ZQhCBnu8jyQTg1xmWQw3KY=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    req,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could no fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","json","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","req","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/aylan/OneDrive/Desktop/events/EventsMulti/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, json } from 'react-router-dom';\r\n\r\nimport EventItem from '../components/EventItem';\r\n\r\nfunction EventDetailPage() {\r\n  const data = useParams();\r\n\r\n  return (\r\n    <>\r\n      <EventItem event={ data.event }/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ req, params }){\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n  \r\n  \r\n  if (!response.ok) {\r\n     throw json({message:\"Could no fetch details for selected event\"}, {\r\n      status: 500\r\n    })\r\n  } else {\r\n    return response;\r\n  }\r\n\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAElD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGT,SAAS,EAAE;EAExB,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAGF,IAAI,CAACE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,iBAChC;AAEP;AAACP,EAAA,CARQD,eAAe;EAAA,QACTP,SAAS;AAAA;AAAAgB,EAAA,GADfT,eAAe;AAUxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAhB;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC1C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAGlE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAC;IAA2C,CAAC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AAEF;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}