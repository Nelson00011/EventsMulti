{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aylan\\\\OneDrive\\\\Desktop\\\\events\\\\EventsMulti\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: params.eventId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    req,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could no fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","params","children","event","eventId","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","req","id","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["C:/Users/aylan/OneDrive/Desktop/events/EventsMulti/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\n\r\nimport EventItem from '../components/EventItem';\r\n\r\nfunction EventDetailPage() {\r\n  const params = useParams();\r\n\r\n  return (\r\n    <>\r\n      <EventItem event={ params.eventId }/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ req, params }){\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n  \r\n  \r\n  if (!response.ok) {\r\n     throw json({message:\"Could no fetch details for selected event\"}, {\r\n      status: 500\r\n    })\r\n  } else {\r\n    return response;\r\n  }\r\n\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGR,SAAS,EAAE;EAE1B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAGF,MAAM,CAACG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,iBACpC;AAEP;AAACR,EAAA,CARQD,eAAe;EAAA,QACPN,SAAS;AAAA;AAAAgB,EAAA,GADjBV,eAAe;AAUxB,eAAeA,eAAe;AAE9B,OAAO,eAAeW,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAhB;IAAEC,GAAG;IAAEX;EAAO,CAAC,GAAAU,IAAA;EAC1C,MAAME,EAAE,GAAGZ,MAAM,CAACG,OAAO;EAEzB,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAGlE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMC,IAAI,CAAC;MAACC,OAAO,EAAC;IAA2C,CAAC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AAEF;AAAC,IAAAL,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}