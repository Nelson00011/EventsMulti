{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aylan\\\\OneDrive\\\\Desktop\\\\events\\\\EventsMulti\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n\n    throw json({\n      message: \"Could no fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","Suspense","children","Await","resolve","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","defer","$RefreshReg$"],"sources":["C:/Users/aylan/OneDrive/Desktop/events/EventsMulti/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json,  } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const { events } = useLoaderData();\r\n\r\n  // if (data.isError) {\r\n  //   return <p>{data.message}</p>;\r\n  // }\r\n \r\n\r\n  return (\r\n    <Suspense>\r\n      <Await resolve={events}>\r\n      {(loadedEvents)=> <EventsList events={loadedEvents}/> }\r\n      </Await>\r\n  </Suspense>);\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents(){\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: 'Could not fetch events.' };\r\n    \r\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n    //   status: 500,\r\n    // });\r\n\r\n    throw json({message:\"Could no fetch details for selected event\"}, {\r\n      status: 500\r\n    })\r\n  } else {\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport function loader() {\r\n  return defer({\r\n    events: loadEvents()\r\n  }) ;\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAU,kBAAkB;AAExD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGP,aAAa,EAAE;;EAElC;EACA;EACA;;EAGA,oBACEI,OAAA,CAACI,QAAQ;IAAAC,QAAA,eACPL,OAAA,CAACM,KAAK;MAACC,OAAO,EAAEJ,MAAO;MAAAE,QAAA,EACrBG,YAAY,iBAAIR,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEK;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AACb;AAACV,EAAA,CAdQD,UAAU;EAAA,QACEL,aAAa;AAAA;AAAAiB,EAAA,GADzBZ,UAAU;AAgBnB,eAAeA,UAAU;AAEzB,eAAea,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;;IAEA;IACA;IACA;;IAEA,MAAMpB,IAAI,CAAC;MAACqB,OAAO,EAAC;IAA2C,CAAC,EAAE;MAChEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AAEF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB,OAAOC,KAAK,CAAC;IACXlB,MAAM,EAAEW,UAAU;EACpB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}