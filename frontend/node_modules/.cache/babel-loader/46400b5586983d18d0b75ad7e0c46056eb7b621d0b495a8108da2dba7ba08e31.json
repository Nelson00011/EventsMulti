{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aylan\\\\OneDrive\\\\Desktop\\\\events\\\\EventsMulti\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ns;\nfunction NewEventPage() {\n  ///\n\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","s","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/aylan/OneDrive/Desktop/events/EventsMulti/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json } from 'react-router-dom';\r\n\r\nimport EventForm from '../components/EventForm';\r\ns\r\nfunction NewEventPage() {\r\n  ///\r\n\r\n\r\n    return (<EventForm />)\r\n  }\r\n  \r\n  export default NewEventPage;\r\n\r\n  \r\n  export async function action({ request, params }){\r\n    const data = await request.formData();\r\n    const  eventData = { \r\n      title: data.get('title'),\r\n      image: data.get('image'),\r\n      date: data.get('date'),\r\n      description: data.get('description'),\r\n      }\r\n  \r\n\r\n    const response = await fetch('http://localhost:8080/events', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Content-Type': 'application/json'\r\n      }, \r\n      body: JSON.stringify(eventData)\r\n    })\r\n\r\nif(!response.ok){\r\n  throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n}\r\n\r\n  }"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChDC,CAAC;AACD,SAASC,YAAYA,CAAA,EAAG;EACtB;;EAGE,oBAAQF,OAAA,CAACF,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACvB;AAACC,EAAA,GALML,YAAY;AAOnB,eAAeA,YAAY;AAG3B,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAOC,SAAS,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACnC,CAAC;EAGH,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACT,cAAc,EAAE;IAChB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEN,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACd,MAAM9B,IAAI,CAAC;MAAE+B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;AAEE;AAAC,IAAAtB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}