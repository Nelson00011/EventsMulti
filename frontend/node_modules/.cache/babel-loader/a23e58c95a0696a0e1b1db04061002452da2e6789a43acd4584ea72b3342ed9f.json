{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aylan\\\\OneDrive\\\\Desktop\\\\events\\\\EventsMulti\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json, redirect } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  ///\n  s;\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","s","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["C:/Users/aylan/OneDrive/Desktop/events/EventsMulti/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\r\n\r\nimport EventForm from '../components/EventForm';\r\n\r\nfunction NewEventPage() {\r\n  ///\r\ns\r\n\r\n    return (<EventForm method=\"post\"/>)\r\n  }\r\n  \r\n  export default NewEventPage;\r\n\r\n\r\n  export async function action({ request, params }){\r\n    const data = await request.formData();\r\n    const  eventData = { \r\n      title: data.get('title'),\r\n      image: data.get('image'),\r\n      date: data.get('date'),\r\n      description: data.get('description'),\r\n      }\r\n  \r\n\r\n    const response = await fetch('http://localhost:8080/events', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Content-Type': 'application/json'\r\n      }, \r\n      body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if (response.status === 422){\r\n      return (response)\r\n    }\r\n\r\nif(!response.ok){\r\n  throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n}\r\nreturn (redirect('/events'))\r\n\r\n  }"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAEjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACtB;EACFC,CAAC;EAEG,oBAAQF,OAAA,CAACF,SAAS;IAACK,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACpC;AAACC,EAAA,GALMP,YAAY;AAOnB,eAAeA,YAAY;AAG3B,OAAO,eAAeQ,MAAMA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAOC,SAAS,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACnC,CAAC;EAGH,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DnB,MAAM,EAAE,MAAM;IACdoB,OAAO,EAAE;MACT,cAAc,EAAE;IAChB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAChC,CAAC,CAAC;EAEF,IAAIM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAC;IAC1B,OAAQN,QAAQ;EAClB;EAEJ,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAC;IACd,MAAMhC,IAAI,CAAC;MAAEiC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;EACA,OAAQ9B,QAAQ,CAAC,SAAS,CAAC;AAEzB;AAAC,IAAAW,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}